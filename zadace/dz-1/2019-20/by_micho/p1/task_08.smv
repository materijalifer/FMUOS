-- Copyright 2020 Studosi
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

MODULE main 
VAR
	turn : boolean;
	proc0 : process user(turn, FALSE);
	proc1 : process user(turn, TRUE);
ASSIGN
	init(turn) := FALSE;
CTLSPEC AG !(proc0.state = critical & proc1.state = critical)
CTLSPEC AG(proc0.state = entering -> AF(proc0.state = critical))
CTLSPEC AG(proc1.state = entering -> AF(proc1.state = critical))

MODULE user(turn, ind)
VAR
	state : {entering, critical, exiting, noncritical};
ASSIGN
	init(state) := {entering, noncritical};
	next(state) :=
		case
			(state = entering) & (turn = ind) : critical;
			state = critical : {critical, exiting};
			state = exiting : noncritical;
			state = noncritical : {entering, noncritical};
			TRUE : state;
		esac;
	next(turn) :=
		case 
			(state = exiting) & (ind = FALSE) : TRUE;
			(state = exiting) & (ind = TRUE) : FALSE;
			TRUE : turn;
		esac;
JUSTICE running
JUSTICE !(state = critical)