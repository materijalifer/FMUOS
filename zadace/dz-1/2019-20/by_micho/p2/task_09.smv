-- Copyright 2020 Studosi
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

MODULE main
VAR
	proc0 : process user(proc1.flag);
	proc1 : process user(proc0.flag);
CTLSPEC AG !(proc0.state = critical & proc1.state = critical)
CTLSPEC AG(proc0.state = testflag -> AF(proc0.state = critical))
CTLSPEC AG(proc1.state = testflag -> AF(proc1.state = critical))

MODULE user(oflag)
VAR
	flag : boolean;
	state  : {start, testflag, testflag1, critical, noncritical};
ASSIGN
	init(state) := start;
	init(flag) := TRUE;
	next(state) :=
		case
			state = start : testflag;
			state = testflag & oflag : testflag1;
			state = testflag & !oflag : critical;
			state = testflag1 & oflag : testflag1;
			state = testflag1 & !oflag : testflag;
			state = critical : {critical, noncritical};
			state = noncritical : {noncritical, start};
			TRUE : state;
		esac;

	next(flag) := 
		case 
			state = start : TRUE;
			state = testflag & oflag : FALSE;
			state = testflag1 & !oflag : TRUE;
			state = noncritical : FALSE;
			TRUE : flag;
		esac;
